<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>CubePDF について</value>
  </data>
  <data name="FileExists" xml:space="preserve">
    <value>{0}は既に存在します。{1}しますか？</value>
  </data>
  <data name="FileNotSpecified" xml:space="preserve">
    <value>ファイルが指定されていません。</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Header" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Header.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="InputPathFilter" xml:space="preserve">
    <value>PS ファイル (*.ps)|*.ps;*.PS|EPS ファイル (*.eps)|*.eps;*.EPS|PDF ファイル (*.pdf)|*.pdf;*.PDF|すべてのファイル (*.*)|*.*</value>
  </data>
  <data name="Logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Logo.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PasswordUnmatched" xml:space="preserve">
    <value>入力されたパスワードが一致しません。</value>
  </data>
  <data name="UserProgramFilter" xml:space="preserve">
    <value>実行可能プログラム (*.exe, *.bat)|*.exe;*.EXE;*.bat;*.BAT|すべてのファイル (*.*)|*.*</value>
  </data>
  <data name="InvalidFilename" xml:space="preserve">
    <value>/ * : ? " &lt; &gt; |</value>
  </data>
  <data name="InvalidFilenameTitle" xml:space="preserve">
    <value>ファイル名には次の文字は使えません。</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>CubePDF エラー</value>
  </data>
  <data name="WarningTitle" xml:space="preserve">
    <value>CubePDF 確認</value>
  </data>
  <data name="OutputPathFilter" xml:space="preserve">
    <value>PDF ファイル (*.pdf)|*.pdf;*.PDF|PS ファイル (*.ps)|*.ps;*.PS|EPS ファイル (*.eps)|*.eps;*.EPS|PNG ファイル (*.png)|*.png;*.PNG|JPEG ファイル (*.jpg;*.jpeg)|*.jpg;*.JPG;*.jpeg;*.JPEG|BMP ファイル (*.bmp)|*.bmp;*.BMP|TIFF ファイル (*.tiff;*.tif)|*.tiff;*.TIFF;*.tif;*.TIF</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>CubePDF</value>
  </data>
  <data name="InfoTitle" xml:space="preserve">
    <value>CubePDF</value>
  </data>
  <data name="TooLongFilenam" xml:space="preserve">
    <value>指定されたパスが長すぎます。
パス全体は260文字未満、ディレクトリ名は248文字未満で指定して下さい。</value>
  </data>
  <data name="UserPasswordRequired" xml:space="preserve">
    <value>編集パスワードと閲覧パスワードを共用すると、各種操作の制限が正常に機能しない可能性があります。
閲覧パスワードに編集パスワードとは異なるものを設定するか、または、全ての操作を許可して下さい。</value>
  </data>
  <data name="MergeHead" xml:space="preserve">
    <value>先頭に結合</value>
  </data>
  <data name="MergeTail" xml:space="preserve">
    <value>末尾に結合</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>何もしない</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>開く</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>フォルダを開く</value>
  </data>
  <data name="Overwrite" xml:space="preserve">
    <value>上書き</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>リネーム</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="UserProgram" xml:space="preserve">
    <value>ユーザープログラム</value>
  </data>
</root>